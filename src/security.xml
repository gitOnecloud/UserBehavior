<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/security
    	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<global-method-security pre-post-annotations="enabled" />
	
	<!-- 不过滤静态资源，其中/**/代表跨越目录 -->
	<http pattern="/**/*.html" security="none" />
	<http pattern="/**/*.jsp" security="none" />
	<!-- 不过滤图片整个目录下的文件 -->
	<http pattern="/images/**/*" security="none" />
	<http pattern="/css/**/*" security="none" />
	<http pattern="/script/**/*" security="none" />
	<http pattern="/documents/**/*" security="none" />

	<http auto-config="true">
		<form-login login-page="/login.html"
			default-target-url="/index_rd.action"
			authentication-failure-url="/login.html?json=error"/>
			<!-- username-parameter="username" password-parameter="password" -->
		<logout logout-success-url="/login.html"
			delete-cookies="JSESSIONID" />
		<!-- logout-url="/j_spring_security_logout" -->
		<access-denied-handler error-page="/message.jsp?json=deny" />
		<remember-me key="misIpRem"  services-ref="myIpRememberService" />
		<!-- token-validity-seconds="cookie有效时间(默认两个星期)" -->
		<!-- data-source-ref="持久化到数据库" -->
		<!-- session控制用户登录 -->
		<session-management invalid-session-url="/login.html?json=invalid">
			<concurrency-control 
				expired-url="/login.html?json=expired"
				max-sessions="5"/>
				<!-- error-if-maximum-exceeded="是否阻止新的登录(默认false)" -->
		</session-management>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	
	<!-- 配置自定义的RememberMeServices -->
	<beans:bean id="myIpRememberService" class="cn.onecloud.security.IPTokenBasedRememberMeServices">
		<beans:property name="key" value="misIpRem"/>
		<beans:property name="userDetailsService" ref="myUserDetailsService"/>
	</beans:bean>

<!-- 自定义认证过滤器 ,必须包含authenticationManager,accessDecisionManager, securityMetadataSource三个属性，所有的控制将在这三个类中实现 -->
	<beans:bean id="myFilter" class="cn.onecloud.security.impl.SecurityFilterImpl">
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>
	<!-- 1.0认证管理器(读用户信息) -->
	<authentication-manager alias="myAuthenticationManager">
		<!-- 自己定义service读写与权限有关的数据 -->
		<authentication-provider user-service-ref="myUserDetailsService">
			<password-encoder ref="passwordEncoder">
				<!-- 用户名做为盐值(加密) -->
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<!-- 1.1读取用户账户密码权限(角色) -->
	<beans:bean id="myUserDetailsService" class="cn.onecloud.security.impl.UserDetailsServiceImpl">
		<beans:property name="userManager" ref="userManager"></beans:property>
		<beans:property name="userCache" ref="userCache"></beans:property>
	</beans:bean>
	<!-- 1.1.1启用用户的缓存功能 -->
	<beans:bean id="userCache"
		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<beans:property name="cache" ref="userEhCache" />
	</beans:bean>
	<!-- 1.1.2缓存设置 -->
	<beans:bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<beans:property name="cacheName" value="userCache" />
		<beans:property name="cacheManager" ref="cacheManager" />
	</beans:bean>
	<!-- 1.1.3缓存管理类,可自己定义配置文件(ehcache.xml) -->
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
	<!-- 1.2使用MD5加密和解密用户的密码 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<!-- 2.0访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManager" class="cn.onecloud.security.impl.AccessDecisionManagerImpl"/>
	<!-- 3.0资源与权限定义，建立两者对应关系，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="mySecurityMetadataSource" class="cn.onecloud.security.impl.SecurityMetadataSourceImpl">
		<!-- 作为构造函数的参数 -->
		<beans:constructor-arg name="secuManager" ref="secuManager" />
	</beans:bean>

<!-- 监听权限的操作，将错误记录在日志中 -->
	<beans:bean class="org.springframework.security.authentication.event.LoggerListener" />

</beans:beans>